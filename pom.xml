<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <groupId>com.companyname.at</groupId>
    <artifactId>cucumber-selenium-feign-example</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modelVersion>4.0.0</modelVersion>

    <name>Project with Selenium and Feign tests</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!--Plugin Versions-->
        <maven-compiler-plugin.version>3.6.1</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
        <!--Dependencies versions-->
        <selenium-version>3.5.3</selenium-version>
        <aspectj-weaver>1.8.9</aspectj-weaver>
        <logback.version>1.2.3</logback.version>
        <feign.version>9.5.1</feign.version>
        <feign.form.version>3.0.3</feign.form.version>
        <slf4j.version>1.7.21</slf4j.version>
        <assertj.version>3.8.0</assertj.version>
        <poi.version>3.17</poi.version>
        <!--cucumber -->
        <cucumber.version>1.2.5</cucumber.version>
        <maven-cucumber-reporting.version>3.8.0</maven-cucumber-reporting.version>
        <cucumber-jvm-parallel-plugin.version>4.2.0</cucumber-jvm-parallel-plugin.version>
        <threads>2</threads>
        <remote>true</remote>
        <cucumberOutputDirectory>${project.build.directory}/cucumber</cucumberOutputDirectory>
        <include.runners/>
        <platform/>
        <testFailureIgnore>true</testFailureIgnore>
    </properties>
    <dependencies>
        <!-- Selenium -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>${selenium-version}</version>
            <exclusions>
                <exclusion>  <!-- declare the exclusion here -->
                    <groupId>org.eclipse.jetty</groupId>
                    <artifactId>jetty-servlets</artifactId>
                </exclusion>
              <exclusion>  <!-- declare the exclusion here -->
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-server</artifactId>
              </exclusion>
              <exclusion>  <!-- declare the exclusion here -->
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-servlet</artifactId>
              </exclusion>
            </exclusions>
        </dependency>
        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.18</version>
            <scope>provided</scope>
        </dependency>
        <!-- feign-->
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-okhttp</artifactId>
            <version>${feign.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-gson</artifactId>
            <version>${feign.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-jackson</artifactId>
            <version>${feign.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-slf4j</artifactId>
            <version>${feign.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign.form</groupId>
            <artifactId>feign-form</artifactId>
            <version>${feign.form.version}</version>
        </dependency>


        <!--wiremock-->
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock</artifactId>
            <version>2.18.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>2.3.23</version>
        </dependency>

        <!-- logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <!-- assertion -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
        </dependency>
        <!-- awaitility -->
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>3.0.0</version>
            <scope>test</scope>
        </dependency>
        <!-- cucumber -->
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>${cucumber.version}</version>
        </dependency>
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>${cucumber.version}</version>
        </dependency>
        <!-- POI for Excel-->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>${poi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>${poi.version}</version>
        </dependency>
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>html2pdf</artifactId>
            <version>2.0.0</version>
        </dependency>

        <!--dependencies for swagger-codegen-->
        <dependency>
            <groupId>com.squareup.retrofit2</groupId>
            <artifactId>retrofit</artifactId>
            <version>2.4.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.oltu.oauth2</groupId>
            <artifactId>org.apache.oltu.oauth2.client</artifactId>
            <version>1.0.1</version>
        </dependency>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>1.5.21</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.retrofit2</groupId>
            <artifactId>converter-gson</artifactId>
            <version>2.4.0</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.retrofit2</groupId>
            <artifactId>converter-scalars</artifactId>
            <version>2.4.0</version>
        </dependency>
        <dependency>
            <groupId>io.gsonfire</groupId>
            <artifactId>gson-fire</artifactId>
            <version>1.8.3</version>
        </dependency>

        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>logging-interceptor</artifactId>
            <version>3.11.0</version>
        </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-jsr310</artifactId>
        <version>2.9.6</version>
      </dependency>


        <!-- https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-server -->
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>9.2.24.v20180105</version>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
            <version>9.2.24.v20180105</version>
        </dependency>



        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlets</artifactId>
            <version>9.2.24.v20180105</version>
        </dependency>


    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
                <version>${maven-compiler-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <testFailureIgnore>${testFailureIgnore}</testFailureIgnore>
                    <forkCount>${threads}</forkCount>
                    <reuseForks>false</reuseForks>
                    <includes>
                        <!--<include>**/*CukesTest.java</include>-->
                        <include>${include.runners}</include>
                    </includes>
                    <systemPropertyVariables>
                        <screenshotDirectory>${project.build.directory}/screenshots</screenshotDirectory>
                        <remoteDriver>${remote}</remoteDriver>
                        <desiredPlatform>${platform}</desiredPlatform>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>net.masterthought</groupId>
                <artifactId>maven-cucumber-reporting</artifactId>
                <version>${maven-cucumber-reporting.version}</version>
                <executions>
                    <execution>
                        <id>execution</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <projectName>cucumber-jvm-example</projectName>
                            <outputDirectory>${project.build.directory}/site/cucumber-reports</outputDirectory>
                            <cucumberOutput>${cucumberOutputDirectory}</cucumberOutput>
                            <!--<skippedFails>true</skippedFails>-->
                            <buildNumber>${project.version}</buildNumber>
                            <!--shows additional column in report - 'Device'-->
                            <parallelTesting>true</parallelTesting>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- activate the plugin -->
            <plugin>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-codegen-maven-plugin</artifactId>
                <version>2.3.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>

                            <!-- target to generate java client code -->
                            <language>java</language>


                            <!--<apiPackage>com.companyname.at.swagger.api</apiPackage>-->
                            <!--<modelPackage>com.companyname.at.swagger.model</modelPackage>-->
                            <!--<invokerPackage>com.companyname.at.swagger</invokerPackage>-->
                            <inputSpec>src/test/resources/api.yml</inputSpec>
                            <!-- hint: if you want to generate java server code, e.g. based on Spring Boot,
                                 you can use the following target: <language>spring</language> -->

                            <!-- pass any necessary config options -->
                            <configOptions>
                                <dateLibrary>java8</dateLibrary>

                            </configOptions>

                            <!-- override the default library to jersey2 -->
                            <library>retrofit2</library>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>parallelPlugin</id>
            <properties>
                <include.runners>**/*IT.class</include.runners>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.temyers</groupId>
                        <artifactId>cucumber-jvm-parallel-plugin</artifactId>
                        <version>${cucumber-jvm-parallel-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>generateRunners</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>generateRunners</goal>
                                </goals>
                                <configuration>
                                    <!-- Mandatory -->
                                    <!-- comma separated list of package names to scan for glue code -->
                                    <glue>
                                        <package>com.companyname.at.stepdefs</package>
                                        <package>com.companyname.at.hooks</package>
                                    </glue>
                                    <!-- These are optional, with the default values -->
                                    <!-- Where to output the generated tests -->
                                    <outputDirectory>${project.build.directory}/generated-test-sources/cucumber
                                    </outputDirectory>
                                    <!-- The directory, which must be in the root of the runtime classpath, containing your feature files.  -->
                                    <featuresDirectory>src/test/resources/features</featuresDirectory>
                                    <!-- Directory where the cucumber report files shall be written  -->
                                    <cucumberOutputDir>${cucumberOutputDirectory}</cucumberOutputDir>
                                    <!-- List of cucumber plugins. When none are provided the json formatter is used. For more
                                         advanced usage see section about configuring cucumber plugins -->
                                    <plugins>
                                        <plugin>
                                            <!--The available options are junit, testng, html, pretty, json, usage and rerun -->
                                            <name>json</name>
                                        </plugin>
                                        <plugin>
                                            <name>html</name>
                                        </plugin>
                                        <plugin>
                                            <name>junit</name>
                                        </plugin>
                                        <plugin>
                                            <name>pretty</name>
                                        </plugin>
                                    </plugins>
                                    <!-- CucumberOptions.strict property -->
                                    <strict>true</strict>
                                    <!-- CucumberOptions.monochrome property -->
                                    <monochrome>false</monochrome>
                                    <!--The tags to run, maps to CucumberOptions.tags property-->
                                    <!--<tags>"@all"</tags>-->
                                    <!--TODO - currently not possible to parametrize these tags via mvn properties. Hence, values are HARDCODED for noe-->
                                    <tags>
                                        <tag>@rest</tag>
                                        <tag>@web</tag>
                                        <tag>~@disable</tag>
                                        <tag>~@setup_environment</tag>
                                    </tags>
                                    <!-- Generate TestNG runners instead of JUnit ones. -->
                                    <useTestNG>false</useTestNG>
                                    <!-- The naming scheme to use for the generated test classes.  One of 'simple' or 'feature-title' -->
                                    <namingScheme>feature-title</namingScheme>
                                    <!-- The class naming pattern to use.  Only required/used if naming scheme is 'pattern'.-->
                                    <!--<namingPattern>Parallel{c}IT</namingPattern>-->
                                    <!-- One of [SCENARIO, FEATURE]. SCENARIO generates one runner per scenario.  FEATURE generates a runner per feature. -->
                                    <parallelScheme>FEATURE</parallelScheme>
                                    <!-- Specify a custom template for the generated sources (this is a path relative to the project base directory) -->
                                    <customVmTemplate>src/test/resources/custom-runner-template.java.vm
                                    </customVmTemplate>
                                    <!-- Specify a custom package name for generated sources. Default is no package.-->
                                    <!--<packageName></packageName>-->
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
